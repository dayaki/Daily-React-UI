{"ast":null,"code":"import _classCallCheck from \"/Users/SpryPixels/Desktop/daily-react/day03/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/SpryPixels/Desktop/daily-react/day03/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/SpryPixels/Desktop/daily-react/day03/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/SpryPixels/Desktop/daily-react/day03/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/SpryPixels/Desktop/daily-react/day03/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day03/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport Display from './display/Display';\nimport Keypad from './keypad/Keypad';\nimport Operators from './operators/Operators';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      currentCalString: '',\n      result: null,\n      currentCal: []\n    };\n\n    _this.handleOperators = function (op) {\n      var sign;\n\n      switch (op) {\n        case 'divide':\n          sign = \"\\xF7\";\n          break;\n\n        case 'multiply':\n          sign = \"\\xD7\";\n          break;\n\n        case 'minus':\n          sign = \"\\u2212\";\n          break;\n\n        case 'plus':\n          sign = \"+\";\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(function (prevState) {\n        return {\n          currentCalString: prevState.currentCalString + \" \".concat(sign, \" \") // currentCal: prevState.currentCal.concat(sign)\n\n        };\n      });\n    };\n\n    _this.handleKeypad = function (key) {\n      if (typeof key !== 'string') {\n        var last = _this.state.currentCal[_this.state.currentCal.length - 1];\n\n        if (Number.isInteger(last)) {\n          // const new1 = Number(\"\" + last + key);\n          _this.setState(function (prevState) {\n            // const string = this.state.currentCalString.split(' ');\n            // const num = Number.isInteger(Number(string[string.length - 1]));\n            // console.log('num', num)\n            return {\n              currentCalString: prevState.currentCalString + key // currentCal: num ? prevState.currentCal.concat(new1) : prevState.currentCal.concat(key)\n\n            };\n          });\n        } else {\n          _this.setState(function (prevState) {\n            return {\n              currentCalString: prevState.currentCalString + key // currentCal: prevState.currentCal.concat(key)\n\n            };\n          });\n        } // let cal = this.state.currentCalString.split(' ');\n        // console.log(cal, this.state.currentCal)\n\n      }\n    };\n\n    _this.handleCalculation = function () {\n      var query = _this.state.currentCalString.split(' '); // console.log(terms)\n\n\n      var total = 0,\n          sign;\n      console.log(isNaN(query[0]));\n      query.map(function (ca, index) {\n        console.log('total map', total);\n\n        if (index === 0 && Number(ca)) {\n          total = Number(ca);\n        }\n\n        if (isNaN(ca)) {\n          if (ca === 'âˆ’') {\n            sign = 'minus';\n          } else if (ca === '+') {\n            sign = 'plus';\n          }\n        }\n\n        if (Number(ca) && sign !== undefined) {\n          console.log('sign2', sign);\n          console.log('total', total);\n\n          if (sign === 'minus') {\n            total = total - Number(ca);\n          } else if (sign === 'plus') {\n            total = total + Number(ca);\n          }\n        }\n\n        return '';\n      });\n      console.log(total);\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-6 offset-sm-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row calculator\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Display, {\n        operations: this.state.currentCalString,\n        result: this.state.result,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }), React.createElement(Keypad, {\n        keys: this.handleKeypad,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Operators, {\n        operator: this.handleOperators,\n        calculate: this.handleCalculation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day03/src/components/App.jsx"],"names":["React","Component","Display","Keypad","Operators","App","state","currentCalString","result","currentCal","handleOperators","op","sign","setState","prevState","handleKeypad","key","last","length","Number","isInteger","handleCalculation","query","split","total","console","log","isNaN","map","ca","index","undefined"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport Display from './display/Display';\nimport Keypad from './keypad/Keypad';\nimport Operators from './operators/Operators';\n\nclass App extends Component {\n  state = {\n    currentCalString: '',\n    result: null,\n    currentCal: []\n  };\n\n  handleOperators = (op) => {\n    let sign; \n    switch (op) {\n      case 'divide':\n        sign = '\\u00F7';\n        break;\n      case 'multiply':\n        sign = '\\u00D7';\n        break;\n      case 'minus':\n        sign = '\\u2212';\n        break;\n      case 'plus':\n        sign = '\\u002B';\n        break;\n      default:\n        break;\n    }\n    this.setState((prevState) => {\n      return {\n        currentCalString: prevState.currentCalString + ` ${sign} `,\n        // currentCal: prevState.currentCal.concat(sign)\n      }\n    })\n  }\n\n  handleKeypad = (key) => {\n    if (typeof key !== 'string') {\n      const last = this.state.currentCal[this.state.currentCal.length - 1];\n      if (Number.isInteger(last)) {\n        // const new1 = Number(\"\" + last + key);\n        this.setState((prevState) => {\n          // const string = this.state.currentCalString.split(' ');\n          // const num = Number.isInteger(Number(string[string.length - 1]));\n          // console.log('num', num)\n          return {\n            currentCalString: prevState.currentCalString + key,\n            // currentCal: num ? prevState.currentCal.concat(new1) : prevState.currentCal.concat(key)\n          }\n        });\n      } else {\n        this.setState((prevState) => {\n          return {\n            currentCalString: prevState.currentCalString + key,\n            // currentCal: prevState.currentCal.concat(key)\n          }\n        });\n      }\n\n      // let cal = this.state.currentCalString.split(' ');\n      // console.log(cal, this.state.currentCal)\n    }\n  }\n\n  handleCalculation = () => {\n    let query = this.state.currentCalString.split(' ');\n    // console.log(terms)\n    let total = 0, sign;\n    console.log(isNaN(query[0]));\n    query.map((ca, index) => {\n      console.log('total map', total)\n      if (index === 0 && Number(ca)) {\n        total = Number(ca);\n      }\n      if (isNaN(ca)) {\n        if (ca === 'âˆ’') {\n          sign = 'minus';\n        } else if (ca === '+') {\n          sign = 'plus';\n        }\n      }\n      if (Number(ca) && sign !== undefined) {\n        console.log('sign2', sign)\n        console.log('total', total)\n        if (sign === 'minus') {\n          total = total - Number(ca);\n        } else if (sign === 'plus') {\n          total = total + Number(ca);\n        }\n      }\n      return '';\n    });\n    console.log(total)\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-sm-6 offset-sm-4\">\n              <div className=\"row calculator\">\n                <Display operations={this.state.currentCalString} result={this.state.result} />\n                <Keypad keys={this.handleKeypad} />\n                <div className=\"col-sm4\">\n                  <Operators operator={this.handleOperators} calculate={this.handleCalculation} />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div> \n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}