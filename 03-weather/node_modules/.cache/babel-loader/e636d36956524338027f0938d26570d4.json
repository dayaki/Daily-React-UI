{"ast":null,"code":"var _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx\";\nimport React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nvar getWeekDays = function getWeekDays() {\n  var baseDate = new Date(Date.UTC()); // just a Monday\n\n  var weekDays = [];\n\n  for (var i = 0; i < 7; i++) {\n    weekDays.push(baseDate.toLocaleDateString('en-us', {\n      weekday: 'long'\n    }));\n    baseDate.setDate(baseDate.getDate() + 1);\n  }\n\n  return weekDays;\n};\n\nvar Forecasts = function Forecasts() {\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  console.log(days[new Date().getDay()]);\n  console.log(new Date().getDay());\n  return React.createElement(\"div\", {\n    className: \"forecastWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, days.map(function (day) {\n    return React.createElement(Forecast, {\n      key: day.index,\n      day: getWeekDays(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    });\n  }));\n};\n\nexport default Forecasts;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx"],"names":["React","Forecast","getWeekDays","baseDate","Date","UTC","weekDays","i","push","toLocaleDateString","weekday","setDate","getDate","Forecasts","days","console","log","getDay","map","day","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAf,CADsB,CACe;;AACrC,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBD,IAAAA,QAAQ,CAACE,IAAT,CAAcL,QAAQ,CAACM,kBAAT,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArC,CAAd;AACAP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,CAACS,OAAT,KAAqB,CAAtC;AACD;;AACD,SAAON,QAAP;AACH,CARD;;AAUA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,MAAIC,IAAI,GAAG,CAAC,QAAD,EAAW,QAAX,EAAqB,SAArB,EAAgC,WAAhC,EAA6C,UAA7C,EAAyD,QAAzD,EAAmE,UAAnE,CAAX;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,IAAIV,IAAJ,GAAWa,MAAX,EAAD,CAAhB;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAIZ,IAAJ,GAAWa,MAAX,EAAZ;AAGA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIH,IAAI,CAACI,GAAL,CAAS,UAAAC,GAAG;AAAA,WAAI,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,GAAG,CAACC,KAAnB;AAA0B,MAAA,GAAG,EAAElB,WAAW,EAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAJ;AAAA,GAAZ,CAFJ,CADF;AAcD,CApBD;;AAsBA,eAAeW,SAAf","sourcesContent":["import React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nconst getWeekDays = () => {\n    var baseDate = new Date(Date.UTC()); // just a Monday\n    var weekDays = [];\n    for(let i = 0; i < 7; i++) {       \n      weekDays.push(baseDate.toLocaleDateString('en-us', { weekday: 'long' }));\n      baseDate.setDate(baseDate.getDate() + 1);       \n    }\n    return weekDays;\n}\n\nconst Forecasts = () => {\n  var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  console.log(days[new Date().getDay()])\n  console.log(new Date().getDay())\n\n\n  return (\n    <div className=\"forecastWrapper\">\n      {\n        days.map(day => <Forecast key={day.index} day={getWeekDays()} />)\n      }\n      {/* <Forecast active={true} day=\"Today\" />\n      <Forecast day={days[new Date().getDay() + 1]} />\n      <Forecast day={days[new Date().getDay() + 2]} />\n      <Forecast day={days[new Date().getDay() + 3]} />\n      <Forecast day={days[new Date().getDay() + 4]} />\n      <Forecast day={days[new Date().getDay() + 5]} />\n      <Forecast day={days[new Date().getDay() + 6]} /> */}\n    </div>\n  )\n}\n\nexport default Forecasts;"]},"metadata":{},"sourceType":"module"}