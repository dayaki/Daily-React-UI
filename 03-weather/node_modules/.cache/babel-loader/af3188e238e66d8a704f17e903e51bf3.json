{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx\";\n\nimport React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nvar getWeekDays = function getWeekDays(index) {\n  var baseDate = new Date(Date.now()); // just a Monday\n\n  var weekDays = [];\n\n  for (var i = 0; i < 7; i++) {\n    weekDays.push(baseDate.toLocaleDateString('en-us', {\n      weekday: 'long'\n    }));\n    baseDate.setDate(baseDate.getDate() + 1);\n  }\n\n  return weekDays[index];\n};\n\nvar renderData = function renderData() {\n  var data = null;\n\n  if (props.forecasts) {\n    data = 'yes'; // forecastData.map((forecast, index) => (\n    //   <Forecast key={forecast.dt} day={getWeekDays(index)} />\n    // ))\n  }\n};\n\nvar Forecasts = function Forecasts(props) {\n  // var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var forecastData = props.forecasts;\n  console.log(forecastData);\n  return React.createElement(\"div\", {\n    className: \"forecastWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, _this.renderData());\n};\n\nexport default Forecasts;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx"],"names":["React","Forecast","getWeekDays","index","baseDate","Date","now","weekDays","i","push","toLocaleDateString","weekday","setDate","getDate","renderData","data","props","forecasts","Forecasts","forecastData","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAf,CAD2B,CACU;;AACrC,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBD,IAAAA,QAAQ,CAACE,IAAT,CAAcL,QAAQ,CAACM,kBAAT,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArC,CAAd;AACAP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,CAACS,OAAT,KAAqB,CAAtC;AACD;;AACD,SAAON,QAAQ,CAACJ,KAAD,CAAf;AACH,CARD;;AAUA,IAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,MAAIC,IAAI,GAAG,IAAX;;AACA,MAAIC,KAAK,CAACC,SAAV,EAAqB;AACnBF,IAAAA,IAAI,GAAG,KAAP,CADmB,CAEnB;AACA;AACA;AACD;AACF,CARD;;AAUA,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACF,KAAD,EAAW;AAC3B;AACA,MAAMG,YAAY,GAAGH,KAAK,CAACC,SAA3B;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,YAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,KAAI,CAACL,UAAL,EADF,CADF;AAWD,CAhBD;;AAkBA,eAAeI,SAAf","sourcesContent":["import React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nconst getWeekDays = (index) => {\n    var baseDate = new Date(Date.now()); // just a Monday\n    var weekDays = [];\n    for(let i = 0; i < 7; i++) {       \n      weekDays.push(baseDate.toLocaleDateString('en-us', { weekday: 'long' }));\n      baseDate.setDate(baseDate.getDate() + 1);       \n    }\n    return weekDays[index];\n}\n\nconst renderData = () => {\n  let data = null;\n  if (props.forecasts) {\n    data = 'yes'\n    // forecastData.map((forecast, index) => (\n    //   <Forecast key={forecast.dt} day={getWeekDays(index)} />\n    // ))\n  }\n}\n\nconst Forecasts = (props) => {\n  // var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const forecastData = props.forecasts;\n  console.log(forecastData)\n\n  return (\n    <div className=\"forecastWrapper\">\n    { this.renderData() }\n    {/* { forecastData ?\n          forecastData.map((forecast, index) => (\n            <Forecast key={forecast.dt} day={getWeekDays(index)} />\n          ))\n        : null\n      } */}\n    </div>\n  )\n}\n\nexport default Forecasts;"]},"metadata":{},"sourceType":"module"}