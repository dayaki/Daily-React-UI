{"ast":null,"code":"import _regeneratorRuntime from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/SpryPixels/Desktop/daily-react/day02/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day02/src/components/App.jsx\";\nimport React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\nimport Background from './background/Background';\nimport Status from './status/Status';\nimport Date from './date/Date';\nimport Forecasts from './forecasts/Forecasts';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      weatherData: {}\n    };\n\n    _this.getLocation();\n\n    return _this;\n  } // componentDidMount() {\n  //   this.getWeatherInfo();\n  // }\n\n\n  _createClass(App, [{\n    key: \"getLocation\",\n    value: function getLocation() {\n      var _this2 = this;\n\n      var geolocation = navigator.geolocation; // const location = new Promise((resolve, reject) => {\n      //     if (!geolocation) {\n      //         reject(new Error('Not Supported'));\n      //     }\n      //   geolocation.getCurrentPosition((position) => {\n      //       resolve(position);\n      //   }, () => {\n      //       reject (new Error('Permission denied'));\n      //   });\n      // });\n\n      geolocation.getCurrentPosition(function (position) {\n        // console.log('loca', position);\n        // const location = {\n        //   lat: position.coords.latitude,\n        //   long: position.coords.longitude\n        // }\n        _this2.getWeatherInfo(position.coords.latitude, position.coords.longitude);\n      });\n    }\n  }, {\n    key: \"getWeatherInfo\",\n    value: function () {\n      var _getWeatherInfo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(lat, long) {\n        var res, weatherInfo;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?lat=\".concat(lat, \"&lon=\").concat(long, \"&units=metric&appid=c5baa00af2bfbc51b5a8bff68a069bb0\")).then(function (res) {\n                  return res.json();\n                });\n\n              case 2:\n                res = _context.sent;\n                // https://api.openweathermap.org/data/2.5/weather?lat=${lat}&long=${long}&units=metric&appid=c5baa00af2bfbc51b5a8bff68a069bb0&cnt=7`\n                console.log(res);\n                weatherInfo = {\n                  temp: res.main.temp,\n                  desc: res.weather[0].main,\n                  icon: \"wi-owm-\".concat(res.weather[0].id)\n                };\n                this.setState({\n                  weatherData: weatherInfo\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function getWeatherInfo(_x, _x2) {\n        return _getWeatherInfo.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Background, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Date, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-4\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Status, {\n        weatherData: this.state.weatherData,\n        status: \"Clear Sky\",\n        degree: \"16\",\n        location: \"Lagos Island, Nigeria\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"forecastsWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Forecasts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day02/src/components/App.jsx"],"names":["React","Component","Background","Status","Date","Forecasts","App","props","state","weatherData","getLocation","geolocation","navigator","getCurrentPosition","position","getWeatherInfo","coords","latitude","longitude","lat","long","fetch","then","res","json","console","log","weatherInfo","temp","main","desc","weather","icon","id","setState"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,sCAAP;AACA,OAAO,YAAP;AAEA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;;AAIA,UAAKC,WAAL;;AANiB;AAOlB,G,CAED;AACA;AACA;;;;;kCAEe;AAAA;;AACb,UAAMC,WAAW,GAAGC,SAAS,CAACD,WAA9B,CADa,CAGb;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAAA,WAAW,CAACE,kBAAZ,CAA+B,UAAAC,QAAQ,EAAI;AACzC;AACA;AACA;AACA;AACA;AACA,QAAA,MAAI,CAACC,cAAL,CAAoBD,QAAQ,CAACE,MAAT,CAAgBC,QAApC,EAA8CH,QAAQ,CAACE,MAAT,CAAgBE,SAA9D;AACD,OAPD;AAQH;;;;;;gDAEsBC,G,EAAKC,I;;;;;;;uBAGNC,KAAK,+DAAwDF,GAAxD,kBAAmEC,IAAnE,0DAAL,CAAoIE,IAApI,CAAyI,UAAAC,GAAG;AAAA,yBAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,iBAA5I,C;;;AAAZD,gBAAAA,G;AAEN;AAEAE,gBAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAEMI,gBAAAA,W,GAAc;AAClBC,kBAAAA,IAAI,EAAEL,GAAG,CAACM,IAAJ,CAASD,IADG;AAElBE,kBAAAA,IAAI,EAAEP,GAAG,CAACQ,OAAJ,CAAY,CAAZ,EAAeF,IAFH;AAGlBG,kBAAAA,IAAI,mBAAYT,GAAG,CAACQ,OAAJ,CAAY,CAAZ,EAAeE,EAA3B;AAHc,iB;AAMpB,qBAAKC,QAAL,CAAc;AACZzB,kBAAAA,WAAW,EAAEkB;AADD,iBAAd;;;;;;;;;;;;;;;;6BAKO;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,EAIE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,WAAW,EAAE,KAAKnB,KAAL,CAAWC,WAAhC;AAA6C,QAAA,MAAM,EAAC,WAApD;AAAgE,QAAA,MAAM,EAAC,IAAvE;AAA4E,QAAA,QAAQ,EAAC,uBAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CAJF,CADF,CAFF,EAYE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CAZF,CADF;AAoBD;;;;EAhFeR,S;;AAmFlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nimport Background from './background/Background';\nimport Status from './status/Status';\nimport Date from './date/Date';\nimport Forecasts from './forecasts/Forecasts';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      weatherData: {},\n    };\n    \n    this.getLocation();\n  }\n\n  // componentDidMount() {\n  //   this.getWeatherInfo();\n  // }\n\n   getLocation() {\n    const geolocation = navigator.geolocation;\n\n    // const location = new Promise((resolve, reject) => {\n    //     if (!geolocation) {\n    //         reject(new Error('Not Supported'));\n    //     }\n\n    //   geolocation.getCurrentPosition((position) => {\n    //       resolve(position);\n    //   }, () => {\n    //       reject (new Error('Permission denied'));\n    //   });\n    // });\n\n    geolocation.getCurrentPosition(position => {\n      // console.log('loca', position);\n      // const location = {\n      //   lat: position.coords.latitude,\n      //   long: position.coords.longitude\n      // }\n      this.getWeatherInfo(position.coords.latitude, position.coords.longitude)\n    });\n};\n\n  async getWeatherInfo(lat, long) {\n    // const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?id=2147714&units=metric&appid=c5baa00af2bfbc51b5a8bff68a069bb0`).then(res => res.json());\n\n    const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&units=metric&appid=c5baa00af2bfbc51b5a8bff68a069bb0`).then(res => res.json());\n\n    // https://api.openweathermap.org/data/2.5/weather?lat=${lat}&long=${long}&units=metric&appid=c5baa00af2bfbc51b5a8bff68a069bb0&cnt=7`\n\n    console.log(res)\n\n    const weatherInfo = {\n      temp: res.main.temp,\n      desc: res.weather[0].main,\n      icon: `wi-owm-${res.weather[0].id}`\n    };\n\n    this.setState({\n      weatherData: weatherInfo\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Background />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-8\">\n              <Date />\n            </div>\n            <div className=\"col-4\">\n              <Status weatherData={this.state.weatherData} status=\"Clear Sky\" degree=\"16\" location=\"Lagos Island, Nigeria\" />\n            </div>\n          </div>\n        </div>\n        <div className=\"forecastsWrapper\">\n          <div className=\"col-12\">\n            <Forecasts />\n          </div>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}