{"ast":null,"code":"var _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx\";\nimport React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nvar getWeekDays = function getWeekDays(index) {\n  var baseDate = new Date(Date.now()); // just a Monday\n\n  var weekDays = [];\n\n  for (var i = 0; i < 7; i++) {\n    weekDays.push(baseDate.toLocaleDateString('en-us', {\n      weekday: 'long'\n    }));\n    baseDate.setDate(baseDate.getDate() + 1);\n  }\n\n  return weekDays[index];\n};\n\nvar Forecasts = function Forecasts(props) {\n  // var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  var forecastData = props.forecasts;\n  console.log(forecastData);\n  return React.createElement(\"div\", {\n    className: \"forecastWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, forecastData ? forecastData.map(function (forecast, index) {\n    return React.createElement(Forecast, {\n      key: forecast.dt,\n      day: getWeekDays(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }) : null);\n};\n\nexport default Forecasts;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx"],"names":["React","Forecast","getWeekDays","index","baseDate","Date","now","weekDays","i","push","toLocaleDateString","weekday","setDate","getDate","Forecasts","props","forecastData","forecasts","console","log","map","forecast","dt"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC3B,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAf,CAD2B,CACU;;AACrC,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBD,IAAAA,QAAQ,CAACE,IAAT,CAAcL,QAAQ,CAACM,kBAAT,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArC,CAAd;AACAP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,CAACS,OAAT,KAAqB,CAAtC;AACD;;AACD,SAAON,QAAQ,CAACJ,KAAD,CAAf;AACH,CARD;;AAUA,IAAMW,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AAC3B;AACA,MAAMC,YAAY,GAAGD,KAAK,CAACE,SAA3B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEEA,YAAY,GACRA,YAAY,CAACI,GAAb,CAAiB,UAACC,QAAD,EAAWlB,KAAX;AAAA,WACf,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEkB,QAAQ,CAACC,EAAxB;AAA4B,MAAA,GAAG,EAAEpB,WAAW,CAACC,KAAD,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADe;AAAA,GAAjB,CADQ,GAIR,IANN,CADF;AAWD,CAhBD;;AAkBA,eAAeW,SAAf","sourcesContent":["import React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nconst getWeekDays = (index) => {\n    var baseDate = new Date(Date.now()); // just a Monday\n    var weekDays = [];\n    for(let i = 0; i < 7; i++) {       \n      weekDays.push(baseDate.toLocaleDateString('en-us', { weekday: 'long' }));\n      baseDate.setDate(baseDate.getDate() + 1);       \n    }\n    return weekDays[index];\n}\n\nconst Forecasts = (props) => {\n  // var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  const forecastData = props.forecasts;\n  console.log(forecastData)\n\n  return (\n    <div className=\"forecastWrapper\">\n    {/* { forecastData ? 'yes' : 'no' } */}\n    { forecastData ?\n          forecastData.map((forecast, index) => (\n            <Forecast key={forecast.dt} day={getWeekDays(index)} />\n          ))\n        : null\n      }\n    </div>\n  )\n}\n\nexport default Forecasts;"]},"metadata":{},"sourceType":"module"}