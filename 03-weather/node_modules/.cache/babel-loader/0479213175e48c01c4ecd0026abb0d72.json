{"ast":null,"code":"var _jsxFileName = \"/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx\";\nimport React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nvar getWeekDays = function getWeekDays(index) {\n  var baseDate = new Date(Date.now());\n  var weekDays = [];\n\n  for (var i = 0; i < 7; i++) {\n    weekDays.push(baseDate.toLocaleDateString('en-us', {\n      weekday: 'long'\n    }));\n    baseDate.setDate(baseDate.getDate() + 1);\n  }\n\n  return weekDays[index];\n};\n\nvar renderData = function renderData(props) {\n  var data = null;\n  var forecastData = props.forecasts;\n\n  if (forecastData !== undefined) {\n    return data = forecastData.map(function (forecast, index) {\n      return React.createElement(Forecast, {\n        key: forecast.dt,\n        day: getWeekDays(index),\n        data: forecast,\n        active: index === 0 ? 'active' : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      });\n    });\n  }\n\n  return data;\n};\n\nvar Forecasts = function Forecasts(props) {\n  return React.createElement(\"div\", {\n    className: \"forecastWrapper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, renderData(props));\n};\n\nexport default Forecasts;","map":{"version":3,"sources":["/Users/SpryPixels/Desktop/daily-react/day02/src/components/forecasts/Forecasts.jsx"],"names":["React","Forecast","getWeekDays","index","baseDate","Date","now","weekDays","i","push","toLocaleDateString","weekday","setDate","getDate","renderData","props","data","forecastData","forecasts","undefined","map","forecast","dt","Forecasts"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,MAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,EAAT,CAAf;AACA,MAAIC,QAAQ,GAAG,EAAf;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,CAAnB,EAAsBA,CAAC,EAAvB,EAA2B;AACzBD,IAAAA,QAAQ,CAACE,IAAT,CAAcL,QAAQ,CAACM,kBAAT,CAA4B,OAA5B,EAAqC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAArC,CAAd;AACAP,IAAAA,QAAQ,CAACQ,OAAT,CAAiBR,QAAQ,CAACS,OAAT,KAAqB,CAAtC;AACD;;AACD,SAAON,QAAQ,CAACJ,KAAD,CAAf;AACD,CARD;;AAUA,IAAMW,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAW;AAC5B,MAAIC,IAAI,GAAG,IAAX;AACA,MAAMC,YAAY,GAAGF,KAAK,CAACG,SAA3B;;AACA,MAAID,YAAY,KAAKE,SAArB,EAAgC;AAC9B,WAAOH,IAAI,GACTC,YAAY,CAACG,GAAb,CAAiB,UAACC,QAAD,EAAWlB,KAAX;AAAA,aACf,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEkB,QAAQ,CAACC,EAAxB;AAA4B,QAAA,GAAG,EAAEpB,WAAW,CAACC,KAAD,CAA5C;AAAqD,QAAA,IAAI,EAAEkB,QAA3D;AAAqE,QAAA,MAAM,EAAElB,KAAK,KAAK,CAAV,GAAc,QAAd,GAAyB,IAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADe;AAAA,KAAjB,CADF;AAKD;;AACD,SAAOa,IAAP;AACD,CAXD;;AAaA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACR,KAAD,EAAW;AAC3B,SACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,UAAU,CAACC,KAAD,CADZ,CADF;AAKD,CAND;;AAQA,eAAeQ,SAAf","sourcesContent":["import React from 'react';\nimport './Forecasts.scss';\nimport Forecast from '../forecast/Forecast';\n\nconst getWeekDays = (index) => {\n  var baseDate = new Date(Date.now());\n  var weekDays = [];\n  for(let i = 0; i < 7; i++) {       \n    weekDays.push(baseDate.toLocaleDateString('en-us', { weekday: 'long' }));\n    baseDate.setDate(baseDate.getDate() + 1);       \n  }\n  return weekDays[index];\n}\n\nconst renderData = (props) => {\n  let data = null;\n  const forecastData = props.forecasts;\n  if (forecastData !== undefined) {\n    return data = (\n      forecastData.map((forecast, index) => (\n        <Forecast key={forecast.dt} day={getWeekDays(index)} data={forecast} active={index === 0 ? 'active' : null } />\n      ))\n    )\n  }\n  return data;\n}\n\nconst Forecasts = (props) => {\n  return (\n    <div className=\"forecastWrapper\">\n    { renderData(props) }\n    </div>\n  )\n}\n\nexport default Forecasts;"]},"metadata":{},"sourceType":"module"}